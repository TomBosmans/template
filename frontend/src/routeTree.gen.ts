/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupRouteImport } from './routes/sign_up.route'
import { Route as SigninRouteImport } from './routes/sign_in.route'
import { Route as ForgotpasswordRouteImport } from './routes/forgot_password.route'
import { Route as authenticatedIndexImport } from './routes/(authenticated)/index'

// Create/Update Routes

const SignupRouteRoute = SignupRouteImport.update({
  id: '/sign_up',
  path: '/sign_up',
  getParentRoute: () => rootRoute,
} as any)

const SigninRouteRoute = SigninRouteImport.update({
  id: '/sign_in',
  path: '/sign_in',
  getParentRoute: () => rootRoute,
} as any)

const ForgotpasswordRouteRoute = ForgotpasswordRouteImport.update({
  id: '/forgot_password',
  path: '/forgot_password',
  getParentRoute: () => rootRoute,
} as any)

const authenticatedIndexRoute = authenticatedIndexImport.update({
  id: '/(authenticated)/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/forgot_password': {
      id: '/forgot_password'
      path: '/forgot_password'
      fullPath: '/forgot_password'
      preLoaderRoute: typeof ForgotpasswordRouteImport
      parentRoute: typeof rootRoute
    }
    '/sign_in': {
      id: '/sign_in'
      path: '/sign_in'
      fullPath: '/sign_in'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRoute
    }
    '/sign_up': {
      id: '/sign_up'
      path: '/sign_up'
      fullPath: '/sign_up'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRoute
    }
    '/(authenticated)/': {
      id: '/(authenticated)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authenticatedIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/forgot_password': typeof ForgotpasswordRouteRoute
  '/sign_in': typeof SigninRouteRoute
  '/sign_up': typeof SignupRouteRoute
  '/': typeof authenticatedIndexRoute
}

export interface FileRoutesByTo {
  '/forgot_password': typeof ForgotpasswordRouteRoute
  '/sign_in': typeof SigninRouteRoute
  '/sign_up': typeof SignupRouteRoute
  '/': typeof authenticatedIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/forgot_password': typeof ForgotpasswordRouteRoute
  '/sign_in': typeof SigninRouteRoute
  '/sign_up': typeof SignupRouteRoute
  '/(authenticated)/': typeof authenticatedIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/forgot_password' | '/sign_in' | '/sign_up' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/forgot_password' | '/sign_in' | '/sign_up' | '/'
  id:
    | '__root__'
    | '/forgot_password'
    | '/sign_in'
    | '/sign_up'
    | '/(authenticated)/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ForgotpasswordRouteRoute: typeof ForgotpasswordRouteRoute
  SigninRouteRoute: typeof SigninRouteRoute
  SignupRouteRoute: typeof SignupRouteRoute
  authenticatedIndexRoute: typeof authenticatedIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  ForgotpasswordRouteRoute: ForgotpasswordRouteRoute,
  SigninRouteRoute: SigninRouteRoute,
  SignupRouteRoute: SignupRouteRoute,
  authenticatedIndexRoute: authenticatedIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/forgot_password",
        "/sign_in",
        "/sign_up",
        "/(authenticated)/"
      ]
    },
    "/forgot_password": {
      "filePath": "forgot_password.route.tsx"
    },
    "/sign_in": {
      "filePath": "sign_in.route.tsx"
    },
    "/sign_up": {
      "filePath": "sign_up.route.tsx"
    },
    "/(authenticated)/": {
      "filePath": "(authenticated)/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
